# package root
PKGROOT=.
ENABLE_STD_THREAD=0
# _*_ mode: Makefile; _*_

CXX_STD = CXX11

XGB_RFLAGS = -DXGBOOST_STRICT_R_MODE=1 -DDMLC_LOG_BEFORE_THROW=0\
             -DDMLC_ENABLE_STD_THREAD=$(ENABLE_STD_THREAD)\
             -DDMLC_DISABLE_STDIN=1\
             -DDMLC_LOG_CUSTOMIZE=1 -DXGBOOST_CUSTOMIZE_LOGGER=1\
             -DRABIT_CUSTOMIZE_MSG_ -DRABIT_STRICT_CXX98_

## not needed since this will only work on Linux
# disable the use of thread_local for 32 bit windows:
# ifeq ($(R_OSTYPE)$(WIN),windows)
#    XGB_RFLAGS += -DDMLC_CXX11_THREAD_LOCAL=0
# endif

$(foreach v, $(XGB_RFLAGS), $(warning $(v)))

# xgboost, gurobi, Intel MKL configuration
PKG_CPPFLAGS = -I$(PKGROOT)/include\
               -I$(PKGROOT)/dmlc-core/include\
               -I$(PKGROOT)/rabit/include\
               -I$(PKGROOT)\
               $(XGB_RFLAGS)\
                -I../inst/include/ -I"${GUROBI_HOME}/include" -lm\
               -DMKL_ILP64 -m64 -I"${MKLROOT}/include"
PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS) -pthread
PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS) -pthread\
           -L"${GUROBI_HOME}/lib" -lgurobi_c++ -lgurobi90\
           -lgmp -lgmpxx\
           -L${MKLROOT}/lib/intel64 -Wl,--no-as-needed -lmkl_gnu_thread -lmkl_rt -lmkl_core -lgomp -lpthread -lm -ldl

# define objects
OBJECTS =\
  $(PKGROOT)/init.o\
  $(PKGROOT)/rcpp_expected_value_of_action.o\
  $(PKGROOT)/rcpp_expected_value_of_decision_given_survey_scheme.o\
  $(PKGROOT)/rcpp_predict_missing_rij_data.o\
  $(PKGROOT)/rcpp_posterior_probability_matrix.o\
  $(PKGROOT)/rcpp_expected_value_of_decision_given_perfect_info.o\
  $(PKGROOT)/rcpp_approx_expected_value_of_decision_given_current_info.o\
  $(PKGROOT)/rcpp_approx_expected_value_of_decision_given_perfect_info.o\
  $(PKGROOT)/rcpp_approx_expected_value_of_action.o\
  $(PKGROOT)/rcpp_expected_value_of_decision_given_current_info.o\
  $(PKGROOT)/functions.o\
  $(PKGROOT)/rcpp_states.o\
  $(PKGROOT)/rcpp_probability.o\
  $(PKGROOT)/rcpp_feasible_actions_ilp_matrix.o\
  $(PKGROOT)/rcpp_pmedian_constraint_matrix.o\
  $(PKGROOT)/rcpp_xgboost.o\
  $(PKGROOT)/rcpp_prioritization.o\
  $(PKGROOT)/RcppExports.o\
  ./xgboost_R.o ./xgboost_custom.o ./xgboost_assert.o\
  $(PKGROOT)/amalgamation/xgboost-all0.o\
  $(PKGROOT)/amalgamation/dmlc-minimum0.o\
  $(PKGROOT)/rabit/src/engine_empty.o\
  $(PKGROOT)/rabit/src/c_api.o
